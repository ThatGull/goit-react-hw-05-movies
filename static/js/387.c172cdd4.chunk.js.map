{"version":3,"file":"static/js/387.c172cdd4.chunk.js","mappings":"wQAEaA,E,QAAiBC,GAAAA,GAAH,8iB,6BCiE3B,EA3Da,WACT,OAAuBC,EAAAA,EAAAA,UAAS,IAAhC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACMC,GAASC,EAAAA,EAAAA,QAAO,IAuBxB,OApBEC,EAAAA,EAAAA,YAAU,WACNH,GAAW,GACX,IACI,IAAMI,EAAS,mCAAG,WAAOP,GAAP,wFACOQ,EAAAA,EAAAA,IAAgBR,GADvB,UACRS,EADQ,OAEdV,EAAQU,GACc,IAAlBA,EAAOC,OAHG,uBAIVN,EAAOO,QAAQC,YAAc,0CAJnB,8DAAH,sDAQfL,EAAUP,EAGe,CAF3B,MAAOa,GACLC,QAAQC,IAAIF,EACf,CAZD,QAYWV,GAAW,EAAO,CAEhC,GAAE,CAACH,KAKJ,UAACL,EAAD,YACa,IAAZO,EAAoBJ,EAAKkB,KAAI,gBAAEC,EAAF,EAAEA,KAAMC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,aAAcC,EAAjC,EAAiCA,QAAjC,OAC1B,gBAAIC,UAAU,KAAd,WACI,0BACI,gBAAKC,IAAsB,OAAjBH,EAAA,0CAA2DA,GAAiBI,EAAKC,IAAKP,OAGpG,gBAAKI,UAAU,cAAf,UACA,4BACQ,gBAAKA,UAAU,mBAAf,UAAkC,uBAAIJ,OACtC,yCAAiBC,YARLE,EADE,KAc1B,SAAC,KAAD,CACJK,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,OACNC,UAAU,qBACVC,aAAc,CAAC,EACfC,aAAa,SACbC,SAAS,IAEQ,IAAhBlC,EAAKY,QAAe,gBAAKuB,IAAK7B,IAAiB,OAGnD,C,mMC7DY8B,EAAQ,mCAAG,WAAOC,GAAP,kFACdC,EAAS,CACXC,QAAS,oCAFO,SAKCC,EAAAA,EAAAA,IAAA,gEAAmEH,GAAQ,CAACC,OAAAA,IAL7E,uBAKbG,EALa,EAKbA,KALa,kBAObA,GAPa,2CAAH,sDAWRC,EAAY,mCAAG,WAAOxC,GAAP,kFAClBoC,EAAS,CACXC,QAAS,oCAFW,SAIFC,EAAAA,EAAAA,IAAA,6CAAgDtC,GAAM,CAACoC,OAAAA,IAJrD,uBAIhBG,EAJgB,EAIhBA,KAJgB,kBAKjBA,GALiB,2CAAH,sDAQZ/B,EAAe,mCAAG,WAAOR,GAAP,kFACrBoC,EAAS,CACXC,QAAS,oCAFc,SAINC,EAAAA,EAAAA,IAAA,6CAAgDtC,EAAhD,YAA8D,CAACoC,OAAAA,IAJzD,uBAIpBG,EAJoB,EAIpBA,KAJoB,kBAKpBA,EAAKzC,MALe,2CAAH,sDASf2C,EAAe,mCAAG,WAAOzC,GAAP,kFACrBoC,EAAS,CACXC,QAAS,oCAFc,SAINC,EAAAA,EAAAA,IAAA,6CAAgDtC,EAAhD,YAA8D,CAACoC,OAAAA,IAJzD,uBAIpBG,EAJoB,EAIpBA,KAJoB,kBAKpBA,GALoB,2CAAH,sDAQfG,EAAa,mCAAG,WAAOC,EAAOR,GAAd,kFACnBC,EAAS,CACX,MAASO,EACTN,QAAS,oCAHY,SAMHC,EAAAA,EAAAA,IAAA,yDAA4DH,GAAQ,CAACC,OAAAA,IANlE,uBAMjBG,EANiB,EAMjBA,KANiB,kBAOjBA,GAPiB,2CAAH,uD","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","components/servises/movieAPI.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const ActorContainer = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    gap: 20px;\n    align-items: center;\n    \n\n    & .li {\n        width:calc( ( 100% - 20px ) / 6 );\n        position: relative;\n        height: 380px;\n    }\n\n    & img {\n    height:250px;\n     display: block;\n      margin: 0 auto;\n    }\n\n    & .credentials{\n        position: absolute;\n        left: 20px;\n        top: 260px;\n        width: 100%;\n    }\n\n    & .credentials-item:not(:last-child) {\n        padding-bottom: 10px;\n    }\n\n`","import { useParams } from \"react-router-dom\";\nimport React, {useState, useEffect, useRef} from 'react';\nimport {getMovieCredits} from '../servises/movieAPI';\nimport { ActorContainer } from \"./Cast.styled\";\nimport img from '../../images/no-image-placeholder.png';\nimport { ThreeDots } from 'react-loader-spinner';\n\n\nconst Cast = () => {\n    const [cast, setCast]= useState([]);\n    const { id } = useParams();\n    const [loading, setLoading] = useState(false);\n    const refDiv = useRef('');\n\n\n    useEffect(()=> {\n        setLoading(true);\n        try {\n            const fetchCast = async (id) => {\n                const result = await getMovieCredits(id);\n                setCast(result);\n                if (result.length === 0) {\n                    refDiv.current.textContent = 'There is no info about actors available';\n                    return;\n                }\n                }\n            fetchCast(id);\n        } catch (error) {\n            console.log(error);\n        } finally {setLoading(false)}\n       \n    }, [id])\n\n\n    \n  return (\n    <ActorContainer>\n    {loading === false ? cast.map(({name, character, profile_path, cast_id}) => \n        <li className=\"li\" key={cast_id}>\n            <div>\n                <img src={profile_path !== null ? `https://image.tmdb.org/t/p/w200/${profile_path}` : img} alt={name}></img>\n\n            </div>\n            <div className=\"credentials\">\n            <div >\n                    <div className=\"credentials-item\"><b>{name}</b></div>\n                    <div>Character: {character}</div>\n                </div>\n            </div>\n        </li>\n\n    ) : <ThreeDots\n    height=\"80\"\n    width=\"80\"\n    radius=\"9\"\n    color=\"blue\"\n    ariaLabel=\"three-dots-loading\"\n    wrapperStyle={{}}\n    wrapperClass=\"loader\"\n    visible={true}\n  /> }\n    {cast.length === 0 ? <div ref={refDiv}></div> : null}\n    </ActorContainer>\n  )\n}\n\n\nexport default Cast","import axios from \"axios\";\n\n\nexport const movieAPI = async (page) => {\n    const params = {\n        api_key: 'fab61af76b035bb5fe60a72bbd93e670',\n}\n\n    const {data} = await axios.get(`https://api.themoviedb.org/3/trending/movie/week?page=${page}`, {params});\n\n    return data;\n\n}\n\nexport const getMovieByID = async (id) => {\n    const params = {\n        api_key: 'fab61af76b035bb5fe60a72bbd93e670',\n     }\n     const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${id}`, {params});\n    return data;\n}\n\nexport const getMovieCredits = async (id) => {\n    const params = {\n        api_key: 'fab61af76b035bb5fe60a72bbd93e670',\n     }\n    const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits`, {params});\n    return data.cast;\n}\n\n\nexport const getMovieReviews = async (id) => {\n    const params = {\n        api_key: 'fab61af76b035bb5fe60a72bbd93e670',\n     }\n    const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews`, {params});\n    return data;\n}\n\nexport const getMovieQuery = async (query, page) => {\n    const params = {\n        'query': query,\n        api_key: 'fab61af76b035bb5fe60a72bbd93e670',\n     } \n\n     const {data} = await axios.get(`https://api.themoviedb.org/3/search/movie?page=${page}`, {params});\n     return data;\n}\n"],"names":["ActorContainer","styled","useState","cast","setCast","id","useParams","loading","setLoading","refDiv","useRef","useEffect","fetchCast","getMovieCredits","result","length","current","textContent","error","console","log","map","name","character","profile_path","cast_id","className","src","img","alt","height","width","radius","color","ariaLabel","wrapperStyle","wrapperClass","visible","ref","movieAPI","page","params","api_key","axios","data","getMovieByID","getMovieReviews","getMovieQuery","query"],"sourceRoot":""}